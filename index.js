const fetch = require('node-fetch');
const TelegramBot = require('node-telegram-bot-api');
const { DateTime } = require('luxon');

const telegramToken = '7039136784:AAGcGaj9VbG_O4kSmjPpNuYy3NpVu7Ff3hU'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
const chatId = '-1002167888799'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ chat_id –≤–∞—à–µ–≥–æ —á–∞—Ç–∞
const weatherToken = 'fc01a049e901138a07c480e0657cace0'; // –í–∞—à —Ç–æ–∫–µ–Ω OpenWeatherMap

const bot = new TelegramBot(telegramToken);

const checkAlertsUrl = 'http://ubilling.net.ua/aerialalerts/?json=true';
const regionToCheck = '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å'; // –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
const lat = 50.274584;
const lon = 35.975329;
const weatherUrl = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${weatherToken}&units=metric&lang=ua`;
const weatherForecastUrl = `http://api.openweathermap.org/data/2.5/forecast?lat=${lat}&lon=${lon}&appid=${weatherToken}&units=metric&lang=ua`;

let previousAlertStatus = false; // –•—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ —Ç—Ä–µ–≤–æ–≥–∏
let alertStartTime = null; // –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç—Ä–µ–≤–æ–≥–∏
let alertEndTime = null; // –í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç—Ä–µ–≤–æ–≥–∏

function getCurrentTimeInKiev() {
  return DateTime.now().setZone('Europe/Kiev').toFormat('HH:mm:ss dd/MM/yyyy');
}

async function checkAlert() {
  try {
    const response = await fetch(checkAlertsUrl);
    const data = await response.json();
    const states = data.states;

    const alertData = states[regionToCheck];
    const alertStatus = alertData ? alertData.alertnow : false;

    if (alertStatus !== previousAlertStatus) {
      previousAlertStatus = alertStatus;

      if (alertStatus) {
        alertStartTime = getCurrentTimeInKiev();
        const message = `üö® –£–≤–∞–≥–∞! –ó–æ–ª–æ—á—ñ–≤ - —É —Ö–∞—Ä–∫—ñ–≤—Å—å–∫—ñ–π –æ–±–ª–∞—Å—Ç—ñ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∞ —Ç—Ä–∏–≤–æ–≥–∞ —Ä–æ–∑–ø–æ—á–∞–ª–∞—Å—è –æ ${alertStartTime} üò≠`;
        await bot.sendMessage(chatId, message);
      } else {
        alertEndTime = getCurrentTimeInKiev();
        const message = `‚úÖ –£–≤–∞–≥–∞! –ó–æ–ª–æ—á—ñ–≤ - –≤—ñ–¥–±—ñ–π —Ç—Ä–∏–≤–æ–≥–∏ –æ ${alertEndTime} üòç`;
        await bot.sendMessage(chatId, message);
      }
    }
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Ç—Ä–∏–≤–æ–≥–∏:', error);
  }
}

function getWeatherIcon(description) {
  if (description.includes('—è—Å–Ω–æ')) return '‚òÄÔ∏è';
  if (description.includes('—Ö–º–∞—Ä–Ω–æ')) return '‚òÅÔ∏è';
  if (description.includes('–¥–æ—â')) return 'üåßÔ∏è';
  if (description.includes('—Å–Ω—ñ–≥')) return '‚ùÑÔ∏è';
  if (description.includes('–≥—Ä–æ–∑–∞')) return 'üå©Ô∏è';
  return 'üå§Ô∏è'; // –Ü–∫–æ–Ω–∫–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
}

async function getWeather() {
  try {
    const response = await fetch(weatherUrl);
    const data = await response.json();

    const weatherDescription = data.weather[0].description;
    const temperature = data.main.temp;
    const feelsLike = data.main.feels_like;
    const humidity = data.main.humidity;
    const windSpeed = data.wind.speed;
    const weatherIcon = getWeatherIcon(weatherDescription);

    const message = `
      ${weatherIcon} –ü–æ–≥–æ–¥–∞ –≤ –ó–æ–ª–æ—á–µ–≤—ñ:
      –û–ø–∏—Å: ${weatherDescription}
      –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temperature}¬∞C (–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ ${feelsLike}¬∞C)
      –í–æ–ª–æ–≥—ñ—Å—Ç—å: ${humidity}%
      –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: ${windSpeed} –º/—Å
    `;

    await bot.sendMessage(chatId, message);
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≥–æ–¥–∏:', error);
  }
}

async function getWeatherForecast() {
  try {
    const response = await fetch(weatherForecastUrl);
    const data = await response.json();

    if (!data.list) {
      throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã');
    }

    const forecast = data.list
      .filter((_, index) => index % 8 === 0) // –ü—Ä–æ–≥–Ω–æ–∑ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å (–¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞, 8 –∑–∞–ø–∏—Å–µ–π –Ω–∞ –¥–µ–Ω—å)
      .map(day => {
        const date = DateTime.fromSeconds(day.dt).setZone('Europe/Kiev').toFormat('dd/MM/yyyy');
        const weatherDescription = day.weather[0].description;
        const temperature = day.main.temp;
        const feelsLike = day.main.feels_like;
        const humidity = day.main.humidity;
        const windSpeed = day.wind.speed;
        const weatherIcon = getWeatherIcon(weatherDescription);

        return `
          ${weatherIcon} –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ ${date}:
          –û–ø–∏—Å: ${weatherDescription}
          –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temperature}¬∞C (–≤—ñ–¥—á—É–≤–∞—î—Ç—å—Å—è —è–∫ ${feelsLike}¬∞C)
          –í–æ–ª–æ–≥—ñ—Å—Ç—å: ${humidity}%
          –®–≤–∏–¥–∫—ñ—Å—Ç—å –≤—ñ—Ç—Ä—É: ${windSpeed} –º/—Å
        `;
      }).join('\n');

    const message = `üå§Ô∏è –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥–∏ –Ω–∞ —Ç–∏–∂–¥–µ–Ω—å –≤ –ó–æ–ª–æ—á–µ–≤—ñ:\n${forecast}`;
    await bot.sendMessage(chatId, message);
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø—Ä–æ–≥–Ω–æ–∑—É –ø–æ–≥–æ–¥–∏:', error);
  }
}

// –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≥–æ–¥–∏ –æ–¥—Ä–∞–∑—É –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
getWeather();
getWeatherForecast();

const weatherUpdateTimes = [
  { hour: 8, minute: 0 }, // –†–∞–Ω–æ–∫
  { hour: 14, minute: 0 }, // –î–µ–Ω—å
  { hour: 20, minute: 0 }  // –í–µ—á—ñ—Ä
];

function scheduleWeatherUpdates() {
  weatherUpdateTimes.forEach(time => {
    const now = DateTime.now().setZone('Europe/Kiev');
    let nextUpdate = now.set({ hour: time.hour, minute: time.minute, second: 0 });

    if (now > nextUpdate) {
      nextUpdate = nextUpdate.plus({ days: 1 });
    }

    const delay = nextUpdate.diff(now).as('milliseconds');

    setTimeout(function updateWeather() {
      getWeather();
      getWeatherForecast();
      setInterval(() => {
        getWeather();
        getWeatherForecast();
      }, 24 * 60 * 60 * 1000); // –ü–æ–≤—Ç–æ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
    }, delay);
  });
}

// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü—ñ–π
scheduleWeatherUpdates();
setInterval(checkAlert, 1000);
